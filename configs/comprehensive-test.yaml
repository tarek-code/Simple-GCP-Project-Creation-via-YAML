# Comprehensive Test Configuration - All Modules
# This configuration tests every single module and scenario

project_id: "comprehensive-test-20250103"
billing_account: "01783B-A7A65B-153181"
organization_id: null

labels:
  purpose: "comprehensive-testing"
  environment: "test"
  owner: "test-automation"
  created_by: "github-actions"

# Enable ALL required APIs for comprehensive testing
apis:
  # Core infrastructure
  - compute.googleapis.com
  - iam.googleapis.com
  - storage.googleapis.com
  - cloudresourcemanager.googleapis.com
  - serviceusage.googleapis.com

  # Networking
  - dns.googleapis.com

  # Serverless
  - run.googleapis.com
  - cloudfunctions.googleapis.com
  - vpcaccess.googleapis.com

  # Databases & Storage
  - sqladmin.googleapis.com
  - bigquery.googleapis.com
  - redis.googleapis.com

  # Security & Secrets
  - secretmanager.googleapis.com

  # Messaging & Events
  - pubsub.googleapis.com

  # Container & Artifacts
  - container.googleapis.com
  - artifactregistry.googleapis.com

resources:
  # 1. VPC NETWORKING MODULES
  vpc:
    name: "test-vpc"
    routing_mode: "GLOBAL"
    description: "Comprehensive test VPC"

  subnets:
    - name: "test-subnet-11" 
      region: "us-central1"
      ip_cidr_range: "10.10.0.0/24"
      network: "test-vpc"
      private_ip_google_access: true
      secondary_ip_ranges:
        - range_name: "pods"
          ip_cidr_range: "10.20.0.0/16"
        - range_name: "services"
          ip_cidr_range: "10.30.0.0/16"

    - name: "test-subnet-2"
      region: "us-west1"
      ip_cidr_range: "10.11.0.0/24"
      network: "test-vpc"
      private_ip_google_access: false

  firewall_rules:
    - name: "test-allow-ssh"
      network: "test-vpc"
      direction: "INGRESS"
      priority: 1000
      source_ranges: ["0.0.0.0/0"]
      allows:
        - protocol: "tcp"
          ports: ["22"]
      target_tags: ["ssh"]

    - name: "test-allow-http"
      network: "test-vpc"
      direction: "INGRESS"
      priority: 1000
      source_ranges: ["0.0.0.0/0"]
      allows:
        - protocol: "tcp"
          ports: ["80", "443"]
      target_tags: ["web"]

    - name: "test-allow-internal"
      network: "test-vpc"
      direction: "INGRESS"
      priority: 1000
      source_ranges: ["10.0.0.0/8"]
      allows:
        - protocol: "tcp"
          ports: ["0-65535"]
        - protocol: "udp"
          ports: ["0-65535"]
        - protocol: "icmp"

  static_ips:
    - name: "test-external-ip"
      address_type: "EXTERNAL"
      region: "us-central1"
      description: "External static IP for testing"
      network_tier: "PREMIUM"

    - name: "test-internal-ip"
      address_type: "INTERNAL"
      region: "us-central1"
      subnetwork: "test-subnet-1"
      purpose: "GCE_ENDPOINT"
      description: "Internal static IP for testing"
      address: "10.10.0.100"

    - name: "test-global-ip"
      address_type: "EXTERNAL"
      description: "Global static IP for testing"
      network_tier: "PREMIUM"

  cloud_router:
    name: "test-router"
    region: "us-central1"
    network: "test-vpc"
    asn: 65001

  cloud_nat:
    name: "test-nat"
    region: "us-central1"
    router: "test-router"
    nat_ip_allocate_option: "AUTO_ONLY"
    source_subnetwork_ip_ranges_to_nat: "ALL_SUBNETWORKS_ALL_IP_RANGES"

  # 2. COMPUTE RESOURCES
  compute_instances:
    - name: "test-vm-1"
      zone: "us-central1-a"
      machine_type: "e2-micro"
      image: "debian-cloud/debian-11"
      subnetwork: "test-subnet-1"
      tags: ["ssh", "web"]
      metadata:
        startup-script: "#!/bin/bash\necho 'Test VM started' > /tmp/test.log"
        enable-oslogin: "TRUE"

    - name: "test-vm-2"
      zone: "us-west1-a"
      machine_type: "e2-small"
      image: "ubuntu-os-cloud/ubuntu-2004-lts"
      subnetwork: "test-subnet-2"
      tags: ["ssh"]
      service_account: "test-vm-sa@comprehensive-test-20250103.iam.gserviceaccount.com"

  disks:
    - name: "test-disk-standard"
      zone: "us-central1-a"
      size_gb: 100
      type: "pd-standard"
      labels:
        purpose: "test"
        type: "standard"

    - name: "test-disk-ssd"
      zone: "us-central1-a"
      size_gb: 50
      type: "pd-ssd"
      labels:
        purpose: "test"
        type: "ssd"

    - name: "test-disk-balanced"
      zone: "us-central1-a"
      size_gb: 200
      type: "pd-balanced"
      labels:
        purpose: "test"
        type: "balanced"

  gke:
    name: "test-gke-cluster"
    location: "us-central1"
    node_pool_name: "test-node-pool"
    node_count: 1
    machine_type: "e2-standard-2"
    network: "projects/comprehensive-test-20250103/global/networks/test-vpc"
    subnetwork: "projects/comprehensive-test-20250103/regions/us-central1/subnetworks/test-subnet-1"
    cluster_secondary_range_name: "pods"
    services_secondary_range_name: "services"
    enable_private_nodes: true
    master_ipv4_cidr_block: "172.16.0.0/28"
    enable_network_policy: true

  # 3. SERVERLESS RESOURCES
  serverless_vpc_connectors:
    - name: "test-vpc-connector"
      region: "us-central1"
      network: "projects/comprehensive-test-20250103/global/networks/test-vpc"
      ip_cidr_range: "10.8.0.0/28"
      min_instances: 2
      max_instances: 3

  cloud_run_services:
    - name: "test-cloud-run-1"
      location: "us-central1"
      image: "nginxinc/nginx-unprivileged:stable-alpine"
      allow_unauthenticated: true
      vpc_connector: "test-vpc-connector"
      egress: "all-traffic"
      cpu: "1000m"
      memory: "512Mi"
      min_instances: 0
      max_instances: 10

    - name: "test-cloud-run-2"
      location: "us-west1"
      image: "gcr.io/cloudrun/hello"
      allow_unauthenticated: false
      cpu: "500m"
      memory: "256Mi"

  cloud_functions:
    - name: "test-function-http"
      location: "us-central1"
      runtime: "python311"
      entry_point: "main"
      source_bucket: "test-functions-bucket"
      source_object: "functions/http-function.zip"
      trigger_type: "http"
      max_instances: 10

    - name: "test-function-pubsub"
      location: "us-central1"
      runtime: "python311"
      entry_point: "main"
      source_bucket: "test-functions-bucket"
      source_object: "functions/pubsub-function.zip"
      trigger_type: "pubsub"
      trigger_resource: "test-pubsub-topic"

  # 4. STORAGE & DATABASES
  storage_buckets:
    - name: "test-bucket-1"
      location: "US"
      enable_versioning: true
      uniform_bucket_level_access: true
      labels:
        purpose: "test"
        type: "general"
      cors:
        - origin: ["*"]
          method: ["GET", "POST"]
          response_header: ["*"]
          max_age_seconds: 3600
      lifecycle_rules:
        - action:
            type: "Delete"
          condition:
            age: 30

    - name: "test-bucket-2"
      location: "us-central1"
      enable_versioning: false
      uniform_bucket_level_access: false
      labels:
        purpose: "test"
        type: "regional"
      force_destroy: true

  cloud_sql_instances:
    - name: "test-sql-postgres"
      database_version: "POSTGRES_14"
      region: "us-central1"
      tier: "db-f1-micro"
      deletion_protection: false
      availability_type: "ZONAL"
      disk_size: 20
      disk_type: "PD_SSD"
      ipv4_enabled: true
      authorized_networks:
        - name: "test-network"
          value: "0.0.0.0/0"
      backup_configuration:
        enabled: true
        start_time: "03:00"
        location: "us"
        point_in_time_recovery_enabled: true
      maintenance_window:
        day: 7
        hour: 3
      database_flags:
        - name: "log_statement"
          value: "all"

    - name: "test-sql-mysql"
      database_version: "MYSQL_8_0"
      region: "us-west1"
      tier: "db-f1-micro"
      deletion_protection: false
      private_network: "projects/comprehensive-test-20250103/global/networks/test-vpc"

  bigquery_datasets:
    - dataset_id: "test_analytics"
      location: "US"
      description: "Test analytics dataset"
      labels:
        purpose: "test"
        type: "analytics"

    - dataset_id: "test_warehouse"
      location: "us-central1"
      description: "Test data warehouse"
      labels:
        purpose: "test"
        type: "warehouse"

  memorystore_redis:
    - name: "test-redis-1"
      region: "us-central1"
      tier: "BASIC"
      memory_size_gb: 1
      redis_version: "REDIS_6_X"
      authorized_network: "projects/comprehensive-test-20250103/global/networks/test-vpc"

    - name: "test-redis-2"
      region: "us-west1"
      tier: "STANDARD_HA"
      memory_size_gb: 2
      redis_version: "REDIS_7_X"
      authorized_network: "projects/comprehensive-test-20250103/global/networks/test-vpc"

  # 5. SECURITY & IAM
  service_accounts:
    - account_id: "test-vm-sa"
      display_name: "Test VM Service Account"
      description: "Service account for test VMs"

    - account_id: "test-app-sa"
      display_name: "Test App Service Account"
      description: "Service account for test applications"

    - account_id: "test-db-sa"
      display_name: "Test Database Service Account"
      description: "Service account for test databases"

  iam_bindings:
    - role: "roles/storage.admin"
      member: "serviceAccount:test-vm-sa@comprehensive-test-20250103.iam.gserviceaccount.com"
      condition:
        title: "Test condition"
        expression: "request.time < timestamp('2025-12-31T23:59:59Z')"
        description: "Time-based access control"

    - role: "roles/compute.instanceAdmin"
      member: "serviceAccount:test-app-sa@comprehensive-test-20250103.iam.gserviceaccount.com"

    - role: "roles/cloudsql.client"
      member: "serviceAccount:test-db-sa@comprehensive-test-20250103.iam.gserviceaccount.com"

  secrets:
    - name: "test-api-key"
      value: "test-secret-value-123"

    - name: "test-db-password"
      value: "test-db-password-456"
      replication:
        user_managed:
          - location: "us-central1"
          - location: "us-west1"

    - name: "test-jwt-secret"
      value: "test-jwt-secret-789"
      additional_versions:
        - "old-jwt-secret-abc"

  # 6. MESSAGING & EVENTS
  pubsub_topics:
    - name: "test-events"
      labels:
        purpose: "test"
        type: "events"
      subscriptions:
        - name: "test-events-subscription"
          ack_deadline_seconds: 60
          retain_acked_messages: true
          message_retention_duration: "604800s"

    - name: "test-notifications"
      labels:
        purpose: "test"
        type: "notifications"
      subscriptions:
        - name: "test-notifications-push"
          push_endpoint: "https://test-app.com/webhook"
          oidc_service_account_email: "test-app-sa@comprehensive-test-20250103.iam.gserviceaccount.com"
          oidc_audience: "test-app-audience"
          retry_min_backoff: "10s"
          retry_max_backoff: "600s"

        - name: "test-notifications-dlq"
          dead_letter_topic: "test-failed-notifications"
          max_delivery_attempts: 5
          filter: 'attributes.status="failed"'

  # 7. DNS & ARTIFACTS
  dns_zones:
    - name: "test-public-zone"
      dns_name: "test.example.com."
      description: "Public DNS zone for testing"
      record_sets:
        - name: "test.example.com."
          type: "A"
          ttl: 300
          rrdatas: ["1.2.3.4"]

        - name: "www.test.example.com."
          type: "CNAME"
          ttl: 300
          rrdatas: ["test.example.com."]

        - name: "api.test.example.com."
          type: "A"
          ttl: 300
          rrdatas: ["5.6.7.8"]

    - name: "test-private-zone"
      dns_name: "test.internal."
      description: "Private DNS zone for testing"
      record_sets:
        - name: "db.test.internal."
          type: "A"
          ttl: 300
          rrdatas: ["10.10.0.100"]

        - name: "cache.test.internal."
          type: "CNAME"
          ttl: 300
          rrdatas: ["redis.test.internal."]

  artifact_repos:
    - name: "test-docker-repo"
      location: "us"
      format: "DOCKER"
      description: "Docker repository for testing"
      labels:
        purpose: "test"
        type: "docker"

    - name: "test-maven-repo"
      location: "us-central1"
      format: "MAVEN"
      description: "Maven repository for testing"
      labels:
        purpose: "test"
        type: "maven"
